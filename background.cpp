//=============================================================================
//
// 背景の処理 [background.cpp]
// Author :
//
//=============================================================================
#include "background.h"
#include "input.h"
#include "manager.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// 静的変数
//*****************************************************************************
LPDIRECT3DTEXTURE9 CBackground::m_pTexture=NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CBackground::CBackground()
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CBackground::~CBackground()
{

}

//=============================================================================
// 生成処理
//=============================================================================
CBackground *CBackground::Create(float fPosX , float fPosY ,  const char TexPass[] , BGTYPE type)
{
	//生成処理
	CBackground *pBg;
	pBg = new CBackground;
	
	pBg->m_BgType = type;

	//初期化
	pBg->Init(D3DXVECTOR3(fPosX,fPosY,0.0f),SCREEN_WIDTH,SCREEN_HEIGHT);

	//テクスチャ読み込み
	pBg->LoadTexture(&TexPass[0]);

	return pBg;
}

//=============================================================================
// 更新処理
//=============================================================================
void CBackground::Update(void)
{
	//変数の宣言
	float x,y=0.0f;

	CBackground::SetVtxWidthHeight();
	//キー入力時に背景移動
	if( CManager::GetInputKeyboard()->GetKeyPress(DIK_A) == TRUE)
	{
		x = 0.001f;
	}else if( CManager::GetInputKeyboard()->GetKeyPress(DIK_D) == TRUE)
	{
		x = -0.001f;
	}else
	{
		x = 0.0f;
	}

	//強制スクロール
	switch(m_BgType)
	{
	case BGTYPE_1:
		x *= 1.0f;
		CBackground::SetVtxUV(0.0f + x,-0.001f);
		break;
	case BGTYPE_2:
		x *= 0.8f;
		CBackground::SetVtxUV(0.0f + x,-0.003f);
	break;
	case BGTYPE_3:
		x *= 0.6f;
		CBackground::SetVtxUV(0.0f + x,-0.009f);
		break;
	}
}